@model GAFPAY.ViewModel.Deduction
@if (Model.IsEdit)
{

    ViewBag.Title = "Edit Deduction";
}
else
{
    ViewBag.Title = "Create Deduction";
}

<div class="page-header">
    <h3 class="page-title"> @ViewBag.Title </h3>
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">

            <li class="breadcrumb-item"> <a href="@Url.Action("Index","Home")"> Dashboard</a> </li>
            <li class="breadcrumb-item"> <a href="@Url.Action("IndexDeduction","Settings")"> Deduction</a> </li>
            <li class="breadcrumb-item active" aria-current="page">@ViewBag.Title</li>
        </ol>
    </nav>
</div>

<div class="main-page">
    <div class="row">
        <div class="col-md-6 offset-md-1 grid-margin stretch-card">
            <div class="card">
                <div class="card-body">

                    @using (Html.BeginForm("", "", FormMethod.Post, new {@class = "form-horizontal", role = "form", enctype = "multipart/form-data", id = "NewFormX"}))
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true, "", new {@class = "text-danger"})

                        <div class="form-group">
                            @Html.LabelFor(model => model.DeductionClassID)
                            @Html.DropDownListFor(model => model.DeductionClassID, Model.DeductionClassList, "Select Deduction Class", htmlAttributes: new {@class = "form-control"})

                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.DeductionName)
                            @Html.EditorFor(model => model.DeductionName, new {htmlAttributes = new {@class = "form-control", placeholder = ""}})
                        </div>


                        if (Model.IsEdit)
                        {
                            <a class="btn btn-md btn-primary" id="" onclick="editForm()" style="color: white; background-color: blue;">Edit</a>

                        }
                        else
                        {
                            <a class="btn btn-md btn-primary " id="" onclick="sendForm()" style="color: white; background-color: blue;">Save</a>

                        }

                    }
                </div>
            </div>
        </div>

    </div>
</div>
<script>
    
    function sendForm() {
        var form = $('#NewFormX').get(0);
        swal({
                title: "Save changes",
                text: "Are you sure you want to save?",
                type: "question",
                showCancelButton: true,
                confirmButtonColor: "#5cb85c",
                confirmButtonText: "Save ",
                closeOnConfirm: false,
                showLoaderOnConfirm: true,
                preConfirm: function () {
                    return new Promise(function (resolve) {
                        $.ajax({
                                url: "@Url.Action("CreateDeduction","Settings")",
                                type: 'POST',
                                data: new FormData(form),
                                dataType: 'json',
                                processData: false,
                                contentType: false,
                            })
                            .done(function(response) {
                                if (response.Success) {
                                    swal({
                                        title: "Successful",
                                        text: response.Message + " saved successfully",
                                        type: "success",
                                        showCancelButton: false,
                                        confirmButtonColor: "#1E90FF",
                                        confirmButtonText: "OK",
                                        timer: 5000,
                                        // closeOnConfirm: true
                                    }).then(function() {
                                        window.location.href = '@Url.Action("IndexDeduction", "Settings")';
                                    });
                                }  else {
                                    var error;
                                    if (response.ErrorMessage) {
                                        error = response.ErrorMessage;
                                    } else {
                                        error = "Error while processing. Please try again";
                                    }
                                    swal("Error", error, "error");
                                    //swal("error", "error");
                                }


                            })
                            .fail(function () {
                                swal('Oops...', 'Something went wrong with the processing. Try again !', 'error');
                            });
                    });
                }



            }
        );
    }

    function editForm() {
        var form = $('#NewFormX').get(0);
        swal({
                title: "Save changes",
                text: "Are you sure you want to save?",
                type: "question",
                showCancelButton: true,
                confirmButtonColor: "#5cb85c",
                confirmButtonText: "Save ",
                closeOnConfirm: false,
                showLoaderOnConfirm: true,
                preConfirm: function () {
                    return new Promise(function (resolve) {
                        $.ajax({
                                url: "@Url.Action("EditDeduction","Settings")",
                                type: 'POST',
                                data: new FormData(form),
                                dataType: 'json',
                                processData: false,
                                contentType: false,
                            })
                            .done(function(response) {
                                if (response.Success) {
                                    swal({
                                        title: "Successful",
                                        text: response.Message + " saved successfully",
                                        type: "success",
                                        showCancelButton: false,
                                        confirmButtonColor: "#1E90FF",
                                        confirmButtonText: "OK",
                                        timer: 5000,
                                        // closeOnConfirm: true
                                    }).then(function() {
                                        window.location.href = '@Url.Action("IndexDeduction", "Settings")';
                                    });
                                }  else {
                                    var error;
                                    if (response.ErrorMessage) {
                                        error = response.ErrorMessage;
                                    } else {
                                        error = "Error while processing. Please try again";
                                    }
                                    swal("Error", error, "error");
                                    //swal("error", "error");
                                }


                            })
                            .fail(function () {
                                swal('Oops...', 'Something went wrong with the processing. Try again !', 'error');
                            });
                    });
                }



            }
        );
    }


</script>
<script>
    @*function sendForm() {

        var form = $('#NewFormX').get(0);

        $.ajax({
            url: "@Url.Action("CreateDeduction", "Settings")",
            type: "POST",
            data: new FormData(form),
            processData: false,
            contentType: false,

            success: function (data) {
                if (data.Success) {
                    swal({
                        title: "Success",
                        html: data.Message + " saved successfully",
                        type: "success",
                        showCancelButton: false,
                        confirmButtonColor: "#1E90FF",
                        confirmButtonText: "OK",
                        timer: 4000,

                    }).then((result) => {
                        //redirection happens here
                        window.location.href = '@Url.Action("IndexDeduction", "Settings")';
                    })

                } else {
                    var error;
                    if (data.ErrorMessage) {
                        error = data.ErrorMessage;
                    }
                    else {
                        error = "Error while processing. Please try again";
                    }
                    swal("Error", error, "error");
                    //swal("error", "error");
                }

            }
        });
    }



    function editForm() {

        var form = $('#NewFormX').get(0);

        $.ajax({
            url: "@Url.Action("EditDeduction", "Settings")",
            type: "POST",
            data: new FormData(form),
            processData: false,
            contentType: false,

            success: function (data) {
                if (data.Success) {
                    swal({
                        title: "Success",
                        html: data.Message + " saved successfully",
                        type: "success",
                        showCancelButton: false,
                        confirmButtonColor: "#1E90FF",
                        confirmButtonText: "OK",
                        timer: 4000,

                    }).then((result) => {
                        //redirection happens here
                        window.location.href = '@Url.Action("IndexDeduction", "Settings")';
                    })

                } else {
                    var error;
                    if (data.ErrorMessage) {
                        error = data.ErrorMessage;
                    }
                    else {
                        error = "Error while processing. Please try again";
                    }
                    swal("Error", error, "error");
                    //swal("error", "error");
                }

            }
        });
    }*@

</script>
