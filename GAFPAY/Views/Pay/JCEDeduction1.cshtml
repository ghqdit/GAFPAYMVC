@model GAFPAY.ViewModel.JuniorCEDeduction1
@{
    ViewBag.Title = "Standard Deduction for " + ViewBag.Name;
}

<div class="page-header">
    <h3 class="page-title"> @ViewBag.Title</h3>
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">

            <li class="breadcrumb-item"> <a href="@Url.Action("Index", "Home")"> Dashboard</a> </li>
            <li class="breadcrumb-item"> <a href="@Url.Action("IndexJCEDeduction1", "Pay")">JCE Standard Deductions</a> </li>
            <li class="breadcrumb-item active" aria-current="page">@ViewBag.Title </li>
        </ol>
    </nav>
</div>

<div class="main-page">
    <div class="row">
        <div class="col-md-12 grid-margin stretch-card">
            <div class="card">
                <div class="card-body">
                    @using (Html.BeginForm("", "", FormMethod.Post, new { @class = "form-horizontal", role = "form", enctype = "multipart/form-data", id = "NewFormX" }))
                    {
                        <br />
                        <br />
                        @*<label class="control-label"> Allowances </label>*@
                        <div class="table-responsive">
                            <table class="table table-bordered table-striped" id="deduc">
                                <thead>
                                    <tr style="background-color: #f9f9f9;">
                                        @Html.HiddenFor(model => model.JuniorCEID)
                                        <th class="">Deduction</th>
                                        <th width="20%">Amount GHS</th>
                                        @* <th width="10%" class="text-center">Action</th>*@
                                    </tr>
                                </thead>
                                <tbody>
                                @if (Model.JuniorCEDeduction1Details.Count != 0)
                                {
                                    for (int i = 0; i < Model.JuniorCEDeduction1Details.Count(); i++)
                                    {
                                        <tr>
                                            <td>@Html.EditorFor(model => Model.JuniorCEDeduction1Details[i].DeductionName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })</td>
                                            @* <td> input type="text" class="form-control , readonly=readonly" name="JuniorCEDeduction1Details[i].DeductionName" id="JuniorCEDeduction1Details[i].DeductionName.Desc"  value="@Model.JuniorCEDeduction1Details[i].DeductionName "/> </td>*@
                                            <td>@Html.EditorFor(model => Model.JuniorCEDeduction1Details[i].Amount, new { htmlAttributes = new { @class = "form-control Amount" } })</td>

                                            @*  <td class="text-center"><button type='button' class='btn btn-xs btn-danger' title='Delete' onclick='rDeduc(this);'><i class='fas fa-trash-alt'></i></button></td>*@
                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr>
                                        <td colspan="2" class="text-center">There is no Deductions for @ViewBag.Name</td>
                                    </tr>
                                }
                                

                                </tbody>
                            </table>

                        </div>
                        <br />
                        <br />
                        <div class="row">
                            <a class="btn btn-lg btn-primary pull-right" id="" onclick="sendForm()" style="color: white">Save</a>
                        </div>
                        <br />
                        <br />
                    }
                </div>
            </div>
        </div>

    </div>
</div>
<script src="~/Scripts/tableList.js"></script>
<script>



    $(document).on("keypress keyup blur", '.Amount', function (event) {
        //this.value = this.value.replace(/[^0-9\.]/g,'');
        $(this).val($(this).val().replace(/[^0-9\.]/g, ''));
        if ((event.which != 46 || $(this).val().indexOf('.') != -1) && (event.which < 48 || event.which > 57)) {
            event.preventDefault();
        }
    });


    function sendForm() {
        var form = $('#NewFormX').get(0);
        swal({
            title: "Save changes",
            text: "Are you sure you want to save?",
            type: "question",
            showCancelButton: true,
            confirmButtonColor: "#5cb85c",
            confirmButtonText: "Save ",
            closeOnConfirm: false,
            showLoaderOnConfirm: true,
            preConfirm: function () {
                return new Promise(function (resolve) {
                    $.ajax({
                        url: "@Url.Action("JCEDeduction1","Pay")",
                        type: 'POST',
                        data: new FormData(form),
                        dataType: 'json',
                        processData: false,
                        contentType: false,
                    })
                    .done(function (response) {
                        if (response.Success) {
                            swal({
                                title: "Successful",
                                text: response.Message+ " saved successfully",
                                type: "success",
                                showCancelButton: false,
                                confirmButtonColor: "#1E90FF",
                                confirmButtonText: "OK",
                                timer: 5000,
                                closeOnConfirm: true
                            }).then(function () {
                            window.location.href = '@Url.Action("IndexJCEDeduction1", "Pay")';

                            });

                        }  else {
                            var error;
                            if (response.ErrorMessage) {
                                error = response.ErrorMessage;
                            } else {
                                error = "Error while processing. Please try again";
                            }
                            swal("Error", error, "error");
                            //swal("error", "error");
                        }


                    })
                    .fail(function () {
                        swal('Oops...', 'Something went wrong with the processing. Try again !', 'error');
                    });
                });
            }



        },
        @* *@);
    }


</script>
